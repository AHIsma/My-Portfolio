{"version":3,"sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","assets/images/IsmailAH.js","components/Navbar/Logo.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"names":["DarkModeSwitcher","onClose","useContext","ThemeContext","isDarkMode","setIsDarkMode","t","useTranslation","FormControlLabel","control","Switch","checked","name","color","onChange","label","Logo","props","console","log","themeContext","style","maxWidth","margin","src","_currentValue","alt","useStyles","makeStyles","theme","root","cursor","setHomeIsActive","rest","classes","spy","smooth","duration","offset","to","onSetActive","onSetInactive","className","IsmailAH","languages","code","country_code","profileMenu","backgroundColor","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","LangSelector","useState","anchorEl","setAnchorEl","handleClose","i18n","changeLanguage","currentLanguage","find","elem","Button","variant","onClick","e","currentTarget","KeyboardArrowDownSharp","id","open","Boolean","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","MenuItem","smoothScrollProps","AnimatedLink","React","forwardRef","ref","motion","div","custom","animate","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","transition","minWidth","palette","text","primary","Tab","disableRipple","StyledTabs","indicator","Tabs","TabIndicatorProps","children","Menu","homeIsActive","value","setValue","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","scrollEvent","register","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","event","newValue","component","MuiLink","href","language","underline","marginLeft","drawer","background","default","list","width","fullList","listItem","justifyContent","padding","btnContainer","active","main","MobileMenu","onOpen","listItemProps","button","Link","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","line","height","secondary","line1","marginBottom","line2","line3","HamburgerIcon","isOpen","variants","initial","rotate","x","logo","navbar","toolbar","isMobile","Navbar","useMediaQuery","loaderContext","useTheme","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","Toolbar","Hidden","smDown","mdUp"],"mappings":"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","file":"static/js/13.3b5f26fb.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\r\nimport ThemeContext from \"../../contexts/themeContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DarkModeSwitcher = ({ onClose }) => {\r\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\r\n    const { t } = useTranslation()\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Switch\r\n                    checked={isDarkMode}\r\n                    name=\"checkedDarkMode\"\r\n                    color=\"primary\"\r\n                    onChange={() => {\r\n                        if (onClose) {\r\n                            onClose();\r\n                        }\r\n                        setIsDarkMode(!isDarkMode);\r\n                    }}\r\n                />\r\n            }\r\n            label={t('dark_mode')}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DarkModeSwitcher;\r\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\r\n\r\nexport default DarkModeSwitcher","import * as React from \"react\";\r\nimport themeContext from \"../../contexts/themeContext\";\r\n\r\nconst Logo = (props) => {\r\n    console.log(themeContext)\r\n    return (\r\n        <img style={{maxWidth: \"14%\", margin: \"auto\"}} src={themeContext._currentValue.isDarkMode ? \"logo-full-dark.png\" : \"logo-full-light.png\" } alt=\"My Logo\" />\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-scroll\";\r\nimport IsmailAH from \"../../assets/images/IsmailAH\";\r\n\r\nconst Logo = ({ setHomeIsActive, ...rest }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Link\r\n            spy\r\n            smooth\r\n            duration={500}\r\n            offset={-70}\r\n            to=\"home\"\r\n            onSetActive={() => setHomeIsActive(true)}\r\n            onSetInactive={() => setHomeIsActive(false)}\r\n            className={classes.root}\r\n        >\r\n            <IsmailAH {...rest} />\r\n        </Link>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        cursor: \"pointer\",\r\n    },\r\n}));\r\n\r\nexport default Logo;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"flag-icon-css/css/flag-icon.min.css\";\r\n\r\nconst languages = [\r\n    {\r\n        code: \"fr\",\r\n        name: \"FR\",\r\n        country_code: \"fr\",\r\n    },\r\n    {\r\n        code: \"en\",\r\n        name: \"EN\",\r\n        country_code: \"gb\",\r\n    },\r\n];\r\n\r\nconst LangSelector = (props) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClose = (code) => {\r\n        i18n.changeLanguage(code);\r\n        setAnchorEl(null);\r\n        if (props.onClose) {\r\n            props.onClose();\r\n        }\r\n    };\r\n\r\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\r\n\r\n    return (\r\n        <div {...props}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                {currentLanguage && (\r\n                    <>\r\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\r\n                        {currentLanguage.name}\r\n                    </>\r\n                )}\r\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\r\n            </Button>\r\n            <Menu\r\n                id=\"profile-menu\"\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={() => setAnchorEl(null)}\r\n                keepMounted\r\n                elevation={0}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                className={classes.profileMenu}\r\n                disableScrollLock\r\n            >\r\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\r\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\r\n                    EN\r\n                </MenuItem>\r\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"fr\")}>\r\n                    <span className={`flag-icon flag-icon-fr ${classes.flagIcon}`} />\r\n                    FR\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileMenu: {\r\n        \"& .MuiPaper-root\": {\r\n            backgroundColor: \"#fff\",\r\n            marginTop: \"2px\",\r\n            boxShadow: theme.shadows[4],\r\n        },\r\n    },\r\n    menuItem: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.backgroundSecondary,\r\n        },\r\n    },\r\n    flagIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default LangSelector;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { Link, Events } from \"react-scroll\";\r\nimport LangSelector from \"./LangSelector\";\r\nimport i18n from \"i18next\";\r\nimport LoaderContext from \"../../contexts/loaderContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst smoothScrollProps = {\r\n    spy: true,\r\n    smooth: true,\r\n    offset: -70,\r\n    duration: 500,\r\n};\r\n\r\nconst AnimatedLink = React.forwardRef((props, ref) => (\r\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\r\n        <Link {...smoothScrollProps} {...props} />\r\n    </motion.div>\r\n));\r\n\r\nconst Menu = ({homeIsActive}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(false);\r\n    const [isScrolling, setIsScrolling] = useState(false);\r\n    const { isLoading } = useContext(LoaderContext);\r\n    const controls = useAnimation();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        Events.scrollEvent.register(\"begin\", (to, element) => {\r\n            setIsScrolling(true);\r\n        });\r\n\r\n        Events.scrollEvent.register(\"end\", (to, element) => {\r\n            setIsScrolling(false);\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start((i) => ({\r\n                y: 0,\r\n                opacity: 1,\r\n                transition: { delay: i * 0.1 + 0.3 },\r\n            }));\r\n        } else {\r\n            controls.start({ opacity: 0, y: -5 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const spyHandleChange = (index) => {\r\n        if (!isScrolling) {\r\n            setValue(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (homeIsActive){\r\n            setValue(false)\r\n        }\r\n    }, [homeIsActive])\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <StyledTabs\r\n                className={classes.tabs}\r\n                value={value}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                onChange={handleChange}\r\n                aria-label=\"disabled tabs example\"\r\n            >\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    custom={0}\r\n                    animate={controls}\r\n                    to=\"about\"\r\n                    label={t('menu_about')}\r\n                    onSetActive={() => spyHandleChange(0)}\r\n                    onSetInactive={()=>spyHandleChange(false)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={1}\r\n                    to=\"experience\"\r\n                    label={t('menu_experience')}\r\n                    onSetActive={() => spyHandleChange(1)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={2}\r\n                    to=\"projects\"\r\n                    label={t('menu_projects')}\r\n                    onSetActive={() => spyHandleChange(2)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={3}\r\n                    to=\"contact\"\r\n                    label={t('menu_contact')}\r\n                    onSetActive={() => spyHandleChange(3)}\r\n                />\r\n            </StyledTabs>\r\n            <motion.div custom={4} animate={controls}>\r\n                <Button\r\n                    component={MuiLink}\r\n                    href={i18n.language == \"fr\" ? \"/My-Portfolio/CV_Ismail_AIT_HADDOU_FR.pdf\" : \"/My-Portfolio/CV_Ismail_AIT_HADDOU_EN.pdf\"}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    underline=\"none\"\r\n                >\r\n                    {t('menu_resume')}\r\n                </Button>\r\n            </motion.div>\r\n            <motion.div custom={5} animate={controls}>\r\n                <LangSelector style={{ marginLeft: \"32px\" }} />\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    tabs: {\r\n        marginRight: theme.spacing(4),\r\n    },\r\n    navMenuItem: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n    root: {\r\n        transition: \".2s\",\r\n        minWidth: 120,\r\n        \"&:hover\": {\r\n            color: theme.palette.text.primary,\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst StyledTabs = withStyles({\r\n    indicator: {\r\n        \"& > span\": {\r\n            maxWidth: 20,\r\n        },\r\n    },\r\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\r\nimport { Link } from \"react-scroll\";\r\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\r\nimport LangSelector from \"./LangSelector\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MobileMenu = ({ open, onClose, onOpen }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const listItemProps = {\r\n        button: true,\r\n        component: Link,\r\n        onClick: onClose,\r\n        onKeyDown: onClose,\r\n        spy: true,\r\n        smooth: true,\r\n        offset: 0,\r\n        duration: 500,\r\n        className: classes.listItem,\r\n        activeClass: classes.active,\r\n    };\r\n\r\n    return (\r\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\r\n            <div className={classes.list} role=\"presentation\">\r\n                <List className={classes.fullList}>\r\n                    <ListItem {...listItemProps} to=\"about\">\r\n                        {t('menu_about')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"experience\">\r\n                        {t('menu_experience')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"projects\">\r\n                        {t('menu_projects')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"contact\">\r\n                        {t('menu_contact')}\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <Button\r\n                            component={MuiLink}\r\n                            href={i18n.language == \"fr\" ? \"/My-Portfolio/CV_Ismail_AIT_HADDOU_FR.pdf\" : \"/My-Portfolio/CV_Ismail_AIT_HADDOU_EN.pdf\"}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            underline=\"none\"\r\n                            >\r\n                            {t('menu_resume')}\r\n                        </Button>\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <LangSelector onClose={onClose} />\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <DarkModeSwitcher onClose={onClose} />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: \"auto\",\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    listItem: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2, 0),\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgb(80,80,80)\",\r\n        },\r\n    },\r\n    btnContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    active: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default MobileMenu;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst HamburgerIcon = ({isOpen,...rest}) => {\r\n    const controls = useAnimation()\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            controls.start(\"animate\")\r\n        } else {\r\n            controls.start(\"initial\")\r\n        }\r\n    }, [isOpen,controls]);\r\n    return (\r\n        <motion.div className={classes.container} {...rest}>\r\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        overflow:'hidden',\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"flex-end\",\r\n        cursor:\"pointer\",\r\n        padding:\"2px\"\r\n    },\r\n    line: {\r\n        height: \"3px\",\r\n        backgroundColor: theme.palette.text.secondary,\r\n    },\r\n    line1: {\r\n        width: \"35px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line2: {\r\n        width: \"25px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line3: {\r\n        width: \"35px\",\r\n    },\r\n}));\r\n\r\nexport default HamburgerIcon;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport Logo from \"./Logo\";\r\nimport Menu from \"./Menu\";\r\nimport MobileMenu from \"./MobileMenu\";\r\nimport HamburgerIcon from \"./HamburgerIcon\";\r\nimport loaderContext from \"../../contexts/loaderContext\";\r\n\r\nconst Navbar = () => {\r\n    const [homeIsActive, setHomeIsActive]=useState(true)\r\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\r\n    const { isLoading } = useContext(loaderContext);\r\n    const controls = useAnimation();\r\n    const theme = useTheme();\r\n    const [scroll, setScroll] = useState(false);\r\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\r\n    const classes = useStyles({ scroll, isMobile });\r\n    const handleNav = () => setScroll(window.scrollY > 30);\r\n    window.addEventListener(\"scroll\", handleNav);\r\n\r\n    const appbarVariants = {\r\n        initial: { height: isMobile ? \"18%\" : \"20%\", boxShadow: theme.shadows[0] },\r\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start({\r\n                y: 0,\r\n                transition: {\r\n                    delay: 0.05,\r\n                    type: \"spring\",\r\n                    stiffness: 260,\r\n                    damping: 20,\r\n                },\r\n            });\r\n        } else {\r\n            controls.start({ y: -100 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    return (\r\n        <motion.div\r\n            animate={controls}\r\n        >\r\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\r\n                <Toolbar\r\n                    className={classes.toolbar}\r\n                    component={motion.div}\r\n                    variants={appbarVariants}\r\n                    animate={scroll ? \"scrolled\" : \"initial\"}\r\n                    transition={{\r\n                        type: \"spring\",\r\n                        stiffness: 260,\r\n                        damping: 20,\r\n                    }}\r\n                >\r\n                    <Logo className={classes.logo} setHomeIsActive={setHomeIsActive} />\r\n                    <Hidden smDown>\r\n                        <Menu homeIsActive={homeIsActive} />\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\r\n                    </Hidden>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Hidden mdUp>\r\n                <MobileMenu\r\n                    open={mobileNavIsOpen}\r\n                    onClose={() => setMobileNavIsOpen(false)}\r\n                    onOpen={() => setMobileNavIsOpen(true)}\r\n                />\r\n            </Hidden>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        width: \"150px\",\r\n    },\r\n    navbar: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    toolbar: {\r\n        justifyContent: \"space-between\",\r\n        alignItems:\"center\",\r\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\r\n    },\r\n}));\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\nexport default Navbar;\r\n"],"sourceRoot":""}